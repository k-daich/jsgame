@startuml
title Class Diagram[jsgame]

entity "KeyInput" {
	{field}  - static boolean{} : input
	{field}  - static String{} : keys
	{method} - void : setEventListener()
}
entity "Main" {
	{method} + void : addEventListener('load', ())
	{method} + void : mainLoop()
}
entity "Preloader" {
	{field}  - Promise[] : #preloadPromises
	{method} + void : constructor(_assets...)
	{method} + void : executeWhenComp(callback)
}
entity "Renderer" {
	{field}  - static Canvas : canvas
	{method} + static void : setup(width, height)
	{method} - static void : #addResizeEvent()
}
entity "Sounds" {
	{field}  - static Sound{filePath, sound} : sounds
	{method} + void : add(filePath, sound)
	{method} + Sound : get(filePath)
}
entity "Sound" {
	{method} + Sound : constructor(src)
	{method} + Sound : start()
	{method} + Sound : loop()
	{method} + Sound : stop()
}
entity "Audio" {
}
entity "Scenes" {
	{field}  - Scene : scenes[]
	{method} + void : switchScene(name)
	{method} + void : addScene(name, scene)
	{method} + Scene : getCurrentScene()
}
entity "Scene" {
	{method} + Scene : constructor()
	{method} + void : add(obj)
	{method} + void : update(canvas)
	{method} + void : onenterframe()
	{method} + void : onchangescene()
}
entity "Text" {
	{method} + Text : constructor()
	{method} + Text : center()
	{method} + Text : middle()
	{method} + void : update( canvas )
	{method} + void : render( canvas, ctx )
	{method} + void : onenterframe()
}
entity "ChoiceFrame" {
	{field}  - TextBox : choice1

	{method} + void : bindKey()
}

Main ..> Renderer
Main ..> Preloader
Preloader ..> Sounds
Sound *.. Sounds
Audio <|.. Sound
Scene *.. Scenes
@enduml
